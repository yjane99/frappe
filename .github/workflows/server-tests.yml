name: Server

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [ develop ]

concurrency:
  group: server-develop-${{ github.event_name }}-${{ github.event.number }}
  cancel-in-progress: true


permissions:
  # Do not change this as GITHUB_TOKEN is being used by roulette
  contents: read

jobs:
  checkrun:
    name: Build Check
    runs-on: ubuntu-latest

    outputs:
      build: ${{ steps.check-build.outputs.build }}

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Check if build should be run
        id: check-build
        run: |
          python "${GITHUB_WORKSPACE}/.github/helper/roulette.py"
        env:
          TYPE: "server"
          PR_NUMBER: ${{ github.event.number }}
          REPO_NAME: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: checkrun
    if: ${{ needs.checkrun.outputs.build == 'strawberry' }}
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
       db: ["mariadb", "postgres"]
       container: [1, 2]

    services:
      mariadb:
        image: mariadb:10.6
        env:
          MARIADB_ROOT_PASSWORD: travis
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

      postgres:
        image: postgres:12.4
        env:
          POSTGRES_PASSWORD: travis
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Check for valid Python & Merge Conflicts
        run: |
          python -m compileall -q -f "${GITHUB_WORKSPACE}"
          if grep -lr --exclude-dir=node_modules "^<<<<<<< " "${GITHUB_WORKSPACE}"
              then echo "Found merge conflicts"
              exit 1
          fi

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true

      - name: Add to Hosts
        run: |
          echo "127.0.0.1 test_site" | sudo tee -a /etc/hosts

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/*requirements.txt', '**/pyproject.toml', '**/setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: |
          bash ${GITHUB_WORKSPACE}/.github/helper/install_dependencies.sh
          bash ${GITHUB_WORKSPACE}/.github/helper/install.sh
        env:
          BEFORE: ${{ env.GITHUB_EVENT_PATH.before }}
          AFTER: ${{ env.GITHUB_EVENT_PATH.after }}
          TYPE: server
          DB: ${{ matrix.db }}

      - name: Run Tests
        run: cd ~/frappe-bench/sites && ../env/bin/python3 ../apps/frappe/.github/helper/ci.py
        env:
          SITE: test_site
          CI_BUILD_ID: ${{ github.run_id }}
          BUILD_NUMBER: ${{ matrix.container }}
          TOTAL_BUILDS: 2

      - name: Upload coverage data
        uses: actions/upload-artifact@v3
        with:
          name: coverage-${{ matrix.db }}-${{ matrix.container }}
          path: /home/runner/frappe-bench/sites/coverage.xml

  coverage:
    name: Coverage Wrap Up
    needs: [test, checkrun]
    runs-on: ubuntu-latest
    if: ${{ needs.checkrun.outputs.build == 'strawberry' }}
    steps:
      - name: Clone
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Upload coverage data
        uses: codecov/codecov-action@v3
        with:
          name: Server
          fail_ci_if_error: true
          verbose: true
          flags: server
